{"ast":null,"code":"var _jsxFileName = \"/Users/hoanganh0722/Desktop/Web/The-complete-react/typescript-react/react-typescript/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport FormTodo from \"./components/Todos/FormTodo\";\nimport Todos from \"./components/Todos/Todos\";\nimport TodosObj from \"./models/todo\"; // with typescript in react, we use .tsx below the file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]); // we have type never in here it means that we only can use empty array, to ignore this, we have to define the function\n\n  const addToDoHandler = todo => {\n    if (!todo) {\n      return;\n    }\n\n    const newTodo = new TodosObj(todo);\n    setTodos(prevState => {\n      return [...prevState, newTodo];\n    });\n  };\n\n  const removeTodoHandler = id => {\n    const filterTodo = todos.filter(items => {\n      return items.id !== id;\n    });\n    setTodos(filterTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormTodo, {\n      onAddTodo: addToDoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Todos, {\n      items: todos,\n      removeTodo: removeTodoHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/The-complete-react/typescript-react/react-typescript/src/App.tsx"],"names":["React","useState","FormTodo","Todos","TodosObj","App","todos","setTodos","addToDoHandler","todo","newTodo","prevState","removeTodoHandler","id","filterTodo","filter","items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,QAAP,MAAqB,eAArB,C,CACA;;;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAkB,EAAlB,CAAlC,CADa,CAEb;;AACA,QAAMO,cAAc,GAAIC,IAAD,IAA8B;AACnD,QAAI,CAACA,IAAL,EAAW;AACT;AACD;;AACD,UAAMC,OAAO,GAAG,IAAIN,QAAJ,CAAaK,IAAb,CAAhB;AACAF,IAAAA,QAAQ,CAAEI,SAAD,IAAe;AACtB,aAAO,CAAC,GAAGA,SAAJ,EAAeD,OAAf,CAAP;AACD,KAFO,CAAR;AAGD,GARD;;AASA,QAAME,iBAAiB,GAAIC,EAAD,IAAe;AACvC,UAAMC,UAAU,GAAGR,KAAK,CAACS,MAAN,CAAaC,KAAK,IAAG;AACtC,aAAOA,KAAK,CAACH,EAAN,KAAaA,EAApB;AACD,KAFkB,CAAnB;AAGAN,IAAAA,QAAQ,CAACO,UAAD,CAAR;AACD,GALD;;AAMA,sBACE;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,SAAS,EAAEN;AAArB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,KAAd;AAAqB,MAAA,UAAU,EAAEM;AAAjC;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;GAxBQP,G;;KAAAA,G;AA0BT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport FormTodo from \"./components/Todos/FormTodo\";\nimport Todos from \"./components/Todos/Todos\";\nimport TodosObj from \"./models/todo\";\n// with typescript in react, we use .tsx below the file\nfunction App() {\n  const [todos, setTodos] = useState<Array<TodosObj>>([]);\n  // we have type never in here it means that we only can use empty array, to ignore this, we have to define the function\n  const addToDoHandler = (todo: string | undefined) => {\n    if (!todo) {\n      return;\n    }\n    const newTodo = new TodosObj(todo);\n    setTodos((prevState) => {\n      return [...prevState, newTodo];\n    });\n  };\n  const removeTodoHandler = (id: string) =>{\n    const filterTodo = todos.filter(items =>{\n      return items.id !== id;\n    })\n    setTodos(filterTodo);\n  }\n  return (\n    <>\n      <FormTodo onAddTodo={addToDoHandler} />\n      <Todos items={todos} removeTodo={removeTodoHandler}/>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
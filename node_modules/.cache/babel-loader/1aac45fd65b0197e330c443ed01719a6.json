{"ast":null,"code":"// to describe props of object, we create class\n// it can be type, interface and class\nclass TodosObj {\n  // we describe our expression in here\n  // if class has different properties, and normally will be different properties, we don't have to do that with constructor\n  // to receive value, we have to use constructor\n  constructor(todoText) {\n    this.id = void 0;\n    this.text = void 0;\n    this.text = todoText;\n    this.id = new Date().toISOString();\n  }\n\n}\n\nexport default TodosObj;","map":{"version":3,"sources":["/Users/hoanganh0722/Desktop/Web/The-complete-react/typescript-react/react-typescript/src/models/todo.ts"],"names":["TodosObj","constructor","todoText","id","text","Date","toISOString"],"mappings":"AAAA;AACA;AAEA,MAAMA,QAAN,CAAe;AACX;AACA;AAGA;AACAC,EAAAA,WAAW,CAACC,QAAD,EAAkB;AAAA,SAH7BC,EAG6B;AAAA,SAF7BC,IAE6B;AACzB,SAAKA,IAAL,GAAYF,QAAZ;AACA,SAAKC,EAAL,GAAU,IAAIE,IAAJ,GAAWC,WAAX,EAAV;AACH;;AATU;;AAWf,eAAeN,QAAf","sourcesContent":["// to describe props of object, we create class\n// it can be type, interface and class\n\nclass TodosObj {\n    // we describe our expression in here\n    // if class has different properties, and normally will be different properties, we don't have to do that with constructor\n    id: string;\n    text: string;\n    // to receive value, we have to use constructor\n    constructor(todoText: string){\n        this.text = todoText;\n        this.id = new Date().toISOString()\n    }\n}\nexport default TodosObj;"]},"metadata":{},"sourceType":"module"}